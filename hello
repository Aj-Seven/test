#!/bin/bash

# Global variable to store update status
UPDATE_STATUS=""

# Function to update the repository
update_repo() {
    REPO_DIR="$PREFIX/share/test"
    SCRIPT_NAME="hello"
    BIN_DIR="$PREFIX/bin"

    cd "$REPO_DIR" || exit 1
    
    # Run git pull origin and parse the output to show only relevant lines
   if output=$(git pull origin $(git rev-parse --abbrev-ref HEAD) 2>&1); then
        if echo "$output" | grep -q 'Already up to date'; then
            echo "up-to-date"
        elif echo "$output" | grep -q 'Updating'; then
            echo "updated"
            echo "Restart the script"
            exit 1
        else
            echo "Failed"
         fi
fi
}

# Function to print hello message
hello() {
    echo "Hello AJ7"
}

# Function to print hii message
hii() {
    echo "Hii AJ7"
}

# Function to check for updates in the repository
check_update() {
    REPO_DIR="$PREFIX/share/test"
    SCRIPT_NAME="hello"
    REPO_URL="https://github.com/Aj-Seven/test"

    # Check if the repository folder exists
    if [ ! -d "$REPO_DIR" ]; then
        git clone "$REPO_URL" "$REPO_DIR" > /dev/null 2>&1 || { UPDATE_STATUS="failed"; return; }
    fi

    # Fetch updates forcefully
    cd "$REPO_DIR" || { UPDATE_STATUS="failed"; return; }
    git fetch --force origin > /dev/null 2>&1

    # Get the current branch
    current_branch=$(git rev-parse --abbrev-ref HEAD)

    # Check if the local branch is behind the remote branch
    if [ $(git rev-list HEAD...origin/$current_branch --count) -gt 0 ]; then
        echo "available"
        sleep 0.2
        clear
        printf "Updates Available :)"
        read -p "Do yout want to update it(Y/N)?" select
        case $select in
            Y|y) update_repo
            ;;
            N|n) printf "Returning to main Menu"
                main
            ;;
            *) printf "Invalid Selection, Select in Between Y/N"
            ;;
        esac
    else
        echo "up-to-date"
    fi
}
 UPDATE_STATUS=$(check_update)
# Main function
main() {

    echo -e "\n"
    echo -e "UPDATE MONITOR:"
    echo -e "$UPDATE_STATUS"

    echo "Select an option:"
    echo "1. Check update status"
    echo "3. hello aj"
    echo "4. hii"
    echo "0. Exit"

    read -p "Enter your choice: " choice

    case $choice in
        1) UPDATE_STATUS=$(check_update)
            ;;
        2) hello ;;
        3) hii ;;
        0)
            echo "Exiting..."
            exit 0
            ;;
        *)
            echo "Invalid choice. Please enter a number between 0 and 4."
            ;;
    esac
}

# Set the default PREFIX if not provided
if [ -z "$PREFIX" ]; then
    PREFIX="/data/data/com.termux/files/usr/"
fi

# Execute the main function in a loop
while true; do
    main
done


